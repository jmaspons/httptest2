% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/expect-json.R
\name{expect_json_equal}
\alias{expect_json_equal}
\title{Test that objects would generate equivalent JSON}
\usage{
expect_json_equal(
  object,
  expected,
  info = NULL,
  label = "object",
  expected.label = "expected"
)
}
\arguments{
\item{object}{object to test}

\item{expected}{expected value}

\item{info}{extra information to be included in the message}

\item{label}{character name by which to refer to \code{object} in the test
result. Because the tools for deparsing object names that 'testthat' uses
aren't exported from that package, the default here is just "object".}

\item{expected.label}{character same as \code{label} but for \code{expected}}
}
\value{
Invisibly, returns \code{object} for optionally passing to other
expectations.
}
\description{
Named lists in R are ordered, but they translate to unordered objects in
JSON. This test expectation loosens the equality check of two objects to
ignore the order of elements in a named list.
}
\examples{
expect_json_equal(
  list(
    outer_1 = 1,
    outer_2 = list(
      inner_1 = 1,
      inner_2 = 2
    )
  ),
  list(
    outer_2 = list(
      inner_2 = 2,
      inner_1 = 1
    ),
    outer_1 = 1
  )
)
}
\seealso{
\code{\link[testthat:expect_setequal]{testthat::expect_mapequal()}}
}
